name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches: [ master ]
jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
        os: [ ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install docker
        if: startsWith(runner.os, 'macos')
        run: |
          mkdir -p ~/.docker/machine/cache
          curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.12/boot2docker.iso
          brew install docker docker-machine
          docker-machine create --driver virtualbox default
          docker-machine env default

      - name: Setup PostgreSQL
        if: startsWith(runner.os, 'macos') || startsWith(runner.os, 'linux')
        run: docker run --name postgres -e POSTGRES_PASSWORD=123456 -p 5432:5432 -d postgres

      - name: Start PostgreSQL on Windows
        if: startsWith(runner.os, 'windows')
        run: |
          $pgService = Get-Service -Name postgresql*
          Set-Service -InputObject $pgService -Status running -StartupType automatic
          Start-Process -FilePath "$env:PGBIN\pg_isready" -Wait -PassThru

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r dev_requirements.txt

      - name: Run tests
        run: |
          python -m unittest discover -s tests -t tests

  coverall:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r dev_requirements.txt

      - name: Setup PostgreSQL
        run: docker run --name postgres -e POSTGRES_PASSWORD=123456 -p 5432:5432 -d postgres

      - name: Run tests
        run: coverage run -m unittest discover -s tests -t tests

      - name: Upload coverage data to coveralls.io
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}